Secure Shell （安全外科协议，简称SSH）
ssh是一种加密的网络传输协议，为网络服务提供安全的传输环境。
ssh通过在网络中创建安全隧道来实现SSH客户端与服务器之间的连接，多用于远程登录系统，利用ssh来传输命令行界面和远程执行命令。

基本用法
SSH主要用于远程登录，假设用户名为user，登陆远程主机host
$ ssh user@host

如果本地用户名与远程用户名一致，可以省略
$ ssh host

SSH默认端口为22，登陆请求会发送到远程主机的22端口，使用p可以修改端口
$ ssh -p 2222 user@host

ssh传输过程：
1.远程主机收到用户的登录请求，把自己的公钥发给用户
2.用户使用这个公钥，将登陆密码加密后，发送回来
3.远程主机用自己的私钥，解密登陆密码，如果密码正确，就同意用户登录

一.口令登录：
如果是第一次登陆对方主机，系统会出现下面的提示：
$ ssh user@host
　　The authenticity of host 'host (12.18.429.21)' can't be established.
　　RSA key fingerprint is 98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d.
　　Are you sure you want to continue connecting (yes/no)?

这段话的意思是，无法确认host主机的真实性，只知道他的公钥指纹，是否连接

所谓"公钥指纹"，是指公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹。上例中是98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d，再进行比较，就容易多了。
很自然的一个问题就是，用户怎么知道远程主机的公钥指纹应该是多少？回答是没有好办法，远程主机必须在自己的网站上贴出公钥指纹，以便用户自行核对。

假设用户接受，远程主机的公钥被接受以后会保存在本地的$HOME/.ssh/known_hosts中，下次再连接这台主机，系统会检测出公钥已经有了，从而跳过警告的部分，直接输入密码。

每个SSH用户都有自己的known_hosts文件，此外系统也有一个这样的文件，通常是/etc/ssh/ssh_known_hosts，保存一些对所有用户都可信赖的远程主机的公钥。


二.公钥登录
公钥登录的原理就是用户将自己的公钥储存在远程主机上，登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。

这种方法要求用户必须提供自己的公钥
$ ssh-keygen

运行结束以后，在$HOME/.ssh/目录下，会新生成两个文件：id_rsa.pub和id_rsa。前者是你的公钥，后者是你的私钥。

$ ssh-copy-id user@host
以后就可以直接登录了

如果还是不行，就打开远程主机的/etc/ssh/sshd_config这个文件，检查下面几行前面"#"注释是否取掉。
　　RSAAuthentication yes
　　PubkeyAuthentication yes
　　AuthorizedKeysFile .ssh/authorized_keys
然后，重启远程主机的ssh服务。
　　// ubuntu系统
　　service ssh restart
　　// debian系统
　　/etc/init.d/ssh restart





